{"version":3,"sources":["ClearButton.js","SearchBox.js","CryptoCard.js","heart-regular.svg","Results.js","heart-broken-solid.svg","Favorites.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["ClearButton","props","clearSearch","Button","variant","style","backgroundColor","onClick","SearchBox","setInput","searchCrypto","margin","TextField","label","type","value","input","onChange","e","target","required","id","dollarFormat","Intl","NumberFormat","currency","minimumFractionDigits","CryptoCard","Card","sx","color","width","textAlign","CardContent","Typography","symbol","price","format","Results","crypto","setFavorites","favorites","Row","index","item","className","src","heart","alt","height","defaultHeight","defaultWidth","itemSize","itemCount","length","Favorites","marginBottom","map","el","brokenHeart","filter","useLocalStorage","key","initialValue","useState","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","setCrypto","getCrypto","a","fetch","response","json","data","useEffect","searchFilter","includes","match","alert","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41815aab.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button } from '@mui/material'\r\n\r\nconst ClearButton = (props) => {\r\n\r\n    let clearSearch = props.clearSearch;\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" style={{ backgroundColor: '#E35C06' }} onClick={() => {clearSearch()}}>Clear</Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClearButton\r\n","import React from 'react'\r\nimport { TextField, Button } from '@mui/material';\r\nimport './SearchBox.css';\r\nimport ClearButton from './ClearButton';\r\n\r\nconst SearchBox = (props) => {\r\n\r\n    let setInput = props.setInput;\r\n    let searchCrypto = props.searchCrypto;\r\n    let clearSearch = props.clearSearch;\r\n\r\n    return (\r\n        <div>\r\n        <div style={{ margin: '10px' }}>\r\n         <TextField label=\"Enter Symbol\" type=\"text\" value={props.input} onChange={(e) => {setInput(e.target.value)}} required />  \r\n        </div>\r\n\r\n        <div id=\"searchContainer\">\r\n\r\n        \r\n\r\n\r\n        <div>\r\n            <Button variant=\"contained\" style={{ backgroundColor: '#E35C06' }} onClick={() => {searchCrypto()}}>Search</Button>\r\n        </div>\r\n\r\n        <div>\r\n            <ClearButton clearSearch={clearSearch} />\r\n        </div>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Card } from '@mui/material'\r\nimport { Typography } from '@mui/material';\r\nimport { CardContent } from '@mui/material';\r\nimport './CryptoCard.css'\r\n\r\n\r\nexport const dollarFormat = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2\r\n    })\r\n\r\nconst CryptoCard = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Card variant=\"outlined\" sx={{ backgroundColor: '#1565c0', color: '#FFFFFF', width: '50vw', textAlign: 'center' }}><CardContent><Typography variant=\"h5\">{props.symbol}</Typography>\r\n            <Typography variant=\"subtitle2\">{props.price}</Typography>\r\n            <Typography variant=\"h6\">{dollarFormat.format(props.price)}USD</Typography>\r\n            </CardContent>\r\n            </Card>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CryptoCard\r\n","export default __webpack_public_path__ + \"static/media/heart-regular.86c051b0.svg\";","import React from \"react\";\r\nimport CryptoCard from \"./CryptoCard\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport \"./Results.css\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport heart from './heart-regular.svg'\r\n\r\n\r\n\r\nconst Results = (props) => {\r\n\r\n//Setting the crypto data prop to a variable for readability\r\n\r\n  let crypto = props.crypto;\r\n  let setFavorites = props.setFavorites;\r\n  let favorites = props.favorites;\r\n\r\n\r\n  //Implementation of React-Virtualized\r\n  //The row function acts similiarly to a map method to take each object in the array and output it in the windowed-list.\r\n\r\n  const Row = ({ style, index }) => {\r\n    let item = crypto[index];\r\n    return (\r\n      <div style={style}>\r\n        <CryptoCard symbol={item.symbol} price={item.price} />\r\n        <img className=\"favoriteIcon\" src={heart} alt=\"favorite icon\" onClick={() => {setFavorites([...favorites, item])}}/>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n\r\n    //Implementation of React-window and React-virtualized's Autosizer and Fixedsizelist components to have the large dataset virtualized\r\n    \r\n// After doing some testing and reading online I found with utilizing Autosizer as a standalone package you have to specify the default height and width or it outputs the height and width as 0 automatically\r\n\r\n    <div id=\"cryptoContainer\">\r\n\r\n      <div style={{ width: '50vw', height: '100vh' }}>\r\n\r\n        <AutoSizer\r\n        defaultHeight={1}\r\n        defaultWidth={1}\r\n        >\r\n          {({ height, width }) => (\r\n              <FixedSizeList\r\n                width={width}\r\n                height={height}\r\n                itemSize={150}\r\n                itemCount={crypto.length}\r\n              >\r\n                {Row}\r\n              </FixedSizeList>\r\n            )}\r\n        </AutoSizer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","export default __webpack_public_path__ + \"static/media/heart-broken-solid.7e3c0298.svg\";","import './Favorites.css';\r\nimport brokenHeart from './heart-broken-solid.svg'\r\nimport { dollarFormat } from './CryptoCard';\r\nimport { Button } from '@mui/material'\r\n\r\nconst Favorites = (props) => {\r\n\r\n    let favorites = props.favorites;\r\nlet setFavorites = props.setFavorites;\r\n\r\n    return (\r\n        <div>\r\n        <div style={{ textAlign: 'center' }}>\r\n        <h2>Favorites:</h2>\r\n        <Button style={{ marginBottom: '15px' }} variant=\"contained\" onClick={() => {setFavorites([])}}>Clear All</Button>\r\n        </div>\r\n        <div id=\"favoritesContainer\">\r\n        {favorites.length === 0 ? <div style={{ margin: '0 auto', textAlign: 'center' }}><h4>No favorites have been added...</h4></div> : '' }\r\n        {favorites.map(el => \r\n        <div className='favorites'>\r\n            <h3>{el.symbol}</h3>\r\n            <h5>{el.price}</h5>\r\n            <h5>{dollarFormat.format(el.price)}</h5>\r\n            <img className=\"unfavorite\" src={brokenHeart} alt=\"unfavorite icon\" onClick={() => {setFavorites(favorites.filter(item => item.symbol !== el.symbol))}} />\r\n        </div>\r\n        )}\r\n        \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites\r\n","import { useState } from \"react\";\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage","import \"./App.css\";\nimport SearchBox from \"./SearchBox\";\nimport { useState, useEffect } from \"react\";\nimport Results from \"./Results\";\nimport Favorites from \"./Favorites\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\n\nfunction App() {\n  //Initializing a input state to track user inputs\n\n  const [input, setInput] = useState(\"\");\n\n  //Initiliazing a crypto state to hold all of the crypto data that is fetched from Binance's API below\n\n  const [crypto, setCrypto] = useState([]);\n\n\n  //Initiliazing a state to track the user's favorite cryptocurrencies, which are added to a watchlist\n\n  const [favorites, setFavorites] = useLocalStorage(\"favorites\", [])\n\n  //Fetching the JSON object array from Binance and setting the crypto state as the fetched data using async await\n\n  const getCrypto = async () => {\n    try {\n      const response = await fetch(\n        \"https://api.binance.com/api/v3/ticker/price\"\n      );\n      const data = await response.json();\n      data.map((el) => (el.key = el.symbol));\n      setCrypto(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  //A filter for the crypto array, which filters based on if the user's imput matches any of the crypto names and also validates the user's input\n\n  const searchCrypto = () => {\n    let searchFilter = crypto.filter((el) => el.symbol.includes(input));\n\n    let regex = /[0-9|`|~|!|@|#|$|%|^|&|\\*|\\(|\\)|\\+|=|\\[|\\{|\\]|\\}|\\||\\\\|'|<|,|\\.|>|\\?|\\/|\"\"|;|:]/g;\n\n    let match = input.match(regex);\n\n    console.log(match);\n\n    if (input === \"\") {\n      window.alert(\"Please enter the name of a cryptocurrency\");\n    } \n   else {\n    setCrypto(searchFilter);\n   }\n    };\n\n  //Clears the search input and triggers the getCrypto function to return the data to its original state\n\n  const clearSearch = () => {\n    setInput(\"\");\n    getCrypto();\n  };\n\n  //A useEffect to update localstorage anytime the favorites are updated and to also run on the first render of the app.\n\n  useEffect(() => {\n localStorage.setItem('favorites', JSON.stringify(favorites))\n  }, [favorites])\n\n  //A useEffect to have the getCrypto function run on first render\n\n  useEffect(() => {\n    getCrypto();\n  }, []);\n\n  return (\n    <div>\n      <div id=\"header\">\n\n        <SearchBox\n          input={input}\n          clearSearch={clearSearch}\n          setInput={setInput}\n          searchCrypto={searchCrypto}\n        />\n      </div>\n\n      <div id=\"container\">\n        <Results crypto={crypto} setFavorites={setFavorites} favorites={favorites} />\n       <Favorites favorites={favorites} setFavorites={setFavorites} /> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}